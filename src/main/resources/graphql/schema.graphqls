#tag::query[]
type Query {
#end::query[]
    #tag::first_example[]
    accounts: [Account]!
    #end::first_example[]
    #tag::second_example[]
    account(username: String!): [Account]!
    #end::second_example[]
    #tag::connection_query[]
    accountScroll(username:String, first: Int, after: String, last: Int, before:String): AccountConnection
    #end::connection_query[]
#tag::query[]
}
#end::query[]

#tag::connection_schema[]
type AccountConnection {
    edges: [AccountEdge]!
    pageInfo: PageInfo!
}

type AccountEdge {
    node: Account!
    cursor: String!
}

type PageInfo {
    hasPreviousPage: Boolean!
    hasNextPage: Boolean!
    startCursor: String
    endCursor: String
}
#end::connection_schema[]

#tag::schema[]
type Account {
    id: ID!
    username: String!
    displayName: String!
    server: Server!
    following: [Account]
    lastMessage: String!
}

type Server {
    uri: ID!
    title: String!
    shortDescription: String!
    connectedServers: [Server]
}
#end::schema[]